// Keyboard v1.0

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    static int kbd

    /** Initializes the keyboard. */
    function void init() {
        let kbd = 24576
    } 

    /**
     * Returns the ASCII code (as char) of the currently pressed key,
     * or 0 if no key is currently pressed.
     * Recognizes all ASCII characters, as well as the following extension
     * of action keys:
     * New line = 128 = String.newLine()
     * Backspace = 129 = String.backSpace()
     * Left Arrow = 130
     * Up Arrow = 131
     * Right Arrow = 132
     * Down Arrow = 133
     * Home = 134
     * End = 135
     * Page Up = 136
     * Page Down = 137
     * Insert = 138
     * Delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return kbd[0]
        
    }

    /**								
     * Reads the next character from the keyboard.
     * waits until a key is pressed and then released, then echoes
     * the key to the screen, and returns the value of the pressed key.
     */
    function char readChar() {
        var char c
        let c = 0
        
        while c = 0 {
            let c = Keyboard.keyPressed()
        }
        if !((c = String.backSpace()) | (c = String.newLine())) {
            do Output.printChar(c)
        }
        return c
    }

    /**								
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its value.
     */
    function String readLine(String message) {
        var String s
        var char c
        
        let c = 0
        
        let s = String.new(1)
        
        do Output.printString(message)
        
        while !(c = String.newLine()) {
            let c = Keyboard.readChar()
            
            if c = String.backSpace() {
                if s.length() > 0 {
                    do Output.backSpace()
                    do s.eraseLastChar()
                }
            } else {
                do s.appendChar(c)
            }
        }
        
        return s
    }   

    /**								
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its
     * integer value (until the first non numeric character).
     */
    function int readInt(String message) {
        var String s
        
        let s = Keyboard.readLine(message)
        
        return s.intValue()
        
    }
}
